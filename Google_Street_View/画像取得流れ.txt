画像取得流れ

1.Webサイトより，地名と緯度と経度を取得
2. 取得した緯度経度をStreet View Static APIに渡して画像取得



Log in

Sign up
You said:
import cv2
import numpy as np
import os

# 元画像とセグメンテーション画像が格納されているディレクトリのパス
original_images_folder = r"C:\Users\taisei\Downloads\input_image"
segmentation_images_folder = r"C:\Users\taisei\Downloads\segmentation_mask"
output_folder = r"C:\Users\taisei\Downloads\output_image"

# 出力フォルダが存在しない場合は作成
if not os.path.exists(output_folder):
    os.makedirs(output_folder)

# 元画像とセグメンテーション画像のファイル名を取得
original_images_files = sorted(os.listdir(original_images_folder))
segmentation_images_files = sorted(os.listdir(segmentation_images_folder))

# ファイル数が一致するかチェック
if len(original_images_files) != len(segmentation_images_files):
    print("元画像とセグメンテーション画像のファイル数が一致しません")
    exit()

# 青色の範囲を定義 (HSV色空間での青色範囲)
lower_blue = np.array([100, 90, 50])
upper_blue = np.array([140, 255, 255])

# 各画像に対して処理を実行
for orig_file, seg_file in zip(original_images_files, segmentation_images_files):
    # 画像のパスを作成
    original_image_path = os.path.join(original_images_folder, orig_file)
    segmentation_image_path = os.path.join(segmentation_images_folder, seg_file)

    # 画像の読み込み
    original_image = cv2.imread(original_image_path)
    segmentation_image = cv2.imread(segmentation_image_path)

    # セグメンテーション画像をHSV色空間に変換
    segmentation_hsv = cv2.cvtColor(segmentation_image, cv2.COLOR_BGR2HSV)

    # 青色の部分をマスクとして抽出
    blue_mask = cv2.inRange(segmentation_hsv, lower_blue, upper_blue)

    # マスクを元画像に適用
    masked_image = cv2.bitwise_and(original_image, original_image, mask=blue_mask)

    # 結果を表示（オプション）
    cv2.imshow('Masked Image', masked_image)
    cv2.waitKey(0)

    # 結果の保存（ウィンドウに表示したものを保存）
    output_file = os.path.join(output_folder, f"masked_{orig_file}")
    cv2.imwrite(output_file, masked_image)

# 終了後にウィンドウを閉じる
cv2.destroyAllWindows()

print("処理が完了しました。") 